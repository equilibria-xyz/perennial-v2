/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  KeeperManager,
  KeeperManagerInterface,
} from "../../contracts/KeeperManager";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "invoker_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "KeeeperManager_NotOnlyInvoker",
    type: "error",
  },
  {
    inputs: [],
    name: "KeeperManager_BadOrderParams",
    type: "error",
  },
  {
    inputs: [],
    name: "KeeperManager_CancelOrder_OrderAlreadyCancelled",
    type: "error",
  },
  {
    inputs: [],
    name: "KeeperManager_CloseOrderKeeper_BadClose",
    type: "error",
  },
  {
    inputs: [],
    name: "KeeperManager_CloseOrderKeeper_CannotCancelUnfilledOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "KeeperManager_FillOrder_CannotFill",
    type: "error",
  },
  {
    inputs: [],
    name: "KeeperManager_MaxFeeGt100",
    type: "error",
  },
  {
    inputs: [],
    name: "KeeperManager_NotOnlyKeeper",
    type: "error",
  },
  {
    inputs: [],
    name: "KeeperManager_PlaceOrder_MaxOpenOrders",
    type: "error",
  },
  {
    inputs: [],
    name: "KeeperManager_UpdateOrder_OrderDoesNotExist",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "value",
        type: "int256",
      },
    ],
    name: "UFixed6UnderflowError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "orderIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "orderNonce",
        type: "uint128",
      },
    ],
    name: "OrderCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "orderIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "orderNonce",
        type: "uint128",
      },
    ],
    name: "OrderClosed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "orderIndex",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint128",
        name: "orderNonce",
        type: "uint128",
      },
      {
        indexed: false,
        internalType: "UFixed6",
        name: "limitPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "UFixed6",
        name: "fillPrice",
        type: "uint256",
      },
    ],
    name: "OrderFilled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "orderNonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "isLimit",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "UFixed6",
        name: "takeProfit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "UFixed6",
        name: "stopLoss",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "fee",
        type: "uint8",
      },
    ],
    name: "OrderOpened",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "UFixed6",
        name: "newTakeProfit",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "UFixed6",
        name: "newStopLoss",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "UFixed6",
        name: "limitPrice",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "newFee",
        type: "uint8",
      },
    ],
    name: "OrderUpdated",
    type: "event",
  },
  {
    inputs: [],
    name: "MAX_PCT",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "closeOrderInvoker",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "closeOrderKeeper",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "orderIndex",
        type: "uint256",
      },
    ],
    name: "fillOrder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "invoker",
    outputs: [
      {
        internalType: "contract IMultiInvoker",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "isLong",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isFilled",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "maxFee",
            type: "uint8",
          },
          {
            internalType: "uint128",
            name: "nonce",
            type: "uint128",
          },
          {
            internalType: "UFixed6",
            name: "limitPrice",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "size",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "takeProfit",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "stopLoss",
            type: "uint256",
          },
        ],
        internalType: "struct IKeeperManager.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "placeOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "nonce",
        type: "uint256",
      },
    ],
    name: "readOpenOrder",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isLong",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isFilled",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "maxFee",
            type: "uint8",
          },
          {
            internalType: "uint128",
            name: "nonce",
            type: "uint128",
          },
          {
            internalType: "UFixed6",
            name: "limitPrice",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "size",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "takeProfit",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "stopLoss",
            type: "uint256",
          },
        ],
        internalType: "struct IKeeperManager.Order",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
    ],
    name: "readOrderAtIndex",
    outputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "isLong",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isFilled",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "maxFee",
            type: "uint8",
          },
          {
            internalType: "uint128",
            name: "nonce",
            type: "uint128",
          },
          {
            internalType: "UFixed6",
            name: "limitPrice",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "size",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "takeProfit",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "stopLoss",
            type: "uint256",
          },
        ],
        internalType: "struct IKeeperManager.Order",
        name: "order",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "address",
        name: "market",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "orderIndex",
        type: "uint256",
      },
      {
        components: [
          {
            internalType: "bool",
            name: "isLong",
            type: "bool",
          },
          {
            internalType: "bool",
            name: "isFilled",
            type: "bool",
          },
          {
            internalType: "uint8",
            name: "maxFee",
            type: "uint8",
          },
          {
            internalType: "uint128",
            name: "nonce",
            type: "uint128",
          },
          {
            internalType: "UFixed6",
            name: "limitPrice",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "size",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "takeProfit",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "stopLoss",
            type: "uint256",
          },
        ],
        internalType: "struct IKeeperManager.Order",
        name: "order",
        type: "tuple",
      },
    ],
    name: "updateOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "userOrderNonce",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60803461007457601f6118ce38819003918201601f19168301916001600160401b038311848410176100795780849260209460405283398101031261007457516001600160a01b0381169081900361007457600080546001600160a01b03191691909117905560405161183e90816100908239f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe60806040908082526004918236101561001757600080fd5b600091823560e01c9081631a8d1f14146108dd5750806325d7b457146107dd5780633fef5e0b14610778578063add533961461057a578063b380019714610541578063c296202b146104aa578063d51cfd2114610425578063d6643a74146103d5578063f4492f59146102295763ff1a0ea31461009357600080fd5b34610225576100a136610c85565b909390916100ad610ce5565b9473ffffffffffffffffffffffffffffffffffffffff8092168352602091600283528584209116835281528382209084519661014088019088821067ffffffffffffffff8311176101f9575085528290875b600a83106101dc57505050505b600a811061018e5761018a8484519182918291909160e08061010083019480511515845260208101511515602085015260ff60408201511660408501526fffffffffffffffffffffffffffffffff60608201511660608501526080810151608085015260a081015160a085015260c081015160c08501520151910152565b0390f35b816fffffffffffffffffffffffffffffffff60606101ac8489610df5565b51015116146101c4575b6101bf90610d99565b61010c565b92506101bf6101d38486610df5565b519390506101b6565b6005826001926101eb87610d23565b8152019401920191926100ff565b8460416024927f4e487b7100000000000000000000000000000000000000000000000000000000835252fd5b5080fd5b508290346103d15761023a36610c85565b93909173ffffffffffffffffffffffffffffffffffffffff918287541633036103aa57610268868584611310565b60608101906fffffffffffffffffffffffffffffffff928383511615610383575092849261031a97959260206103209a9896015115156000146103235751168551907f80241e45435d412da83fc0d2a7e8bc8935d3fee74ec0ff4d6c0ce212a61a98d884871692806102fd878716948c839092916fffffffffffffffffffffffffffffffff6020916040840195845216910152565b0390a35b1687526002602052828720911686526020528420610e35565b90610f25565b80f35b51168551907fb6d6dcd5b30e60b694238345e40f3d0c634ac1b64c3c4b0bf00d9dfe5d75be0e848716928061037b878716948c839092916fffffffffffffffffffffffffffffffff6020916040840195845216910152565b0390a3610301565b87517f771b4fce000000000000000000000000000000000000000000000000000000008152fd5b84517f3f8aac1e000000000000000000000000000000000000000000000000000000008152fd5b8280fd5b503461022557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126102255773ffffffffffffffffffffffffffffffffffffffff60209254169051908152f35b503461022557807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610225576fffffffffffffffffffffffffffffffff81602093610471610b91565b610479610bb9565b73ffffffffffffffffffffffffffffffffffffffff9182168352600187528383209116825285522054915191168152f35b50346102255761018a906104cf6104c036610c85565b916104c9610ce5565b50611310565b90519182918291909160e08061010083019480511515845260208101511515602085015260ff60408201511660408501526fffffffffffffffffffffffffffffffff60608201511660608501526080810151608085015260a081015160a085015260c081015160c08501520151910152565b503461022557817ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610225576020905160648152f35b5034610225576101407ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc360112610225576105b3610b91565b906105bc610bb9565b916101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffbc360112610774578151906105f482610bdc565b6044358015158103610770578252606435908115158203610770576020830191825260843560ff8116810361076c578385019081526fffffffffffffffffffffffffffffffff9560a4358781168103610768576060860152608085019260c435845260e43560a087015260c086019561010435875260e081019261012435845273ffffffffffffffffffffffffffffffffffffffff998a8c54163303610740578b9c506106a1838361121c565b8a84169a8b8d5260016020528a8d20908316809d52602052898d2054169686511590526106cd92611383565b936106d790610d99565b9251156000149560c0957fd7498b59d16faf18170ebead3297ac88a578622eb24b6539afeee651b36f0a11976107365760ff8b915b51935194511694825196875260208701521515908501526060840152608083015260a0820152a380f35b60ff60019161070c565b8c8a517f3f8aac1e000000000000000000000000000000000000000000000000000000008152fd5b8880fd5b8680fd5b8580fd5b8380fd5b50346102255761078736610c85565b9273ffffffffffffffffffffffffffffffffffffffff85939293541633036107b55750610320939450610f48565b8590517f3f8aac1e000000000000000000000000000000000000000000000000000000008152fd5b5034610225576107ec36610c85565b916107fb838383989498611310565b9561080681886110b4565b939093156108b657509286926108aa92876108b096886fffffffffffffffffffffffffffffffff606060209d015116917f929fdd4fa74cbde21dcedf5ef9b2f9dca9dff25ec6d48c6bf7db3939c6ed0d246080808b019485519873ffffffffffffffffffffffffffffffffffffffff8099169889951699868b9751938d855260208501528301526060820152a3528752600288528587209087528752848620610e35565b90610e49565b51908152f35b85517fd2da4de8000000000000000000000000000000000000000000000000000000008152fd5b9050839134610774576101607ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc36011261077457610919610b91565b92610922610bb9565b93604435926101007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9c36011261076c5761095b85610bdc565b6064358015158103610b8d5785526084358015158103610b8d57602086015260a4359060ff82168203610b8d578581019182526fffffffffffffffffffffffffffffffff9060c4358281168103610b89576060880152608087019160e43583526101043560a089015260c088019561012435875260e089019661014435885273ffffffffffffffffffffffffffffffffffffffff998a8d54163303610b6157610a04908c61121c565b610a0f898c89611310565b9060608201928484511615610b3a57508a90518d6001610a2e83611089565b14159050610b34575060c0820151985b60c08301998a52518d6001610a5283611089565b14159050610b2e575060e0820151955b60e08301968752602083015115610b24575060ff6080830151975b60808401988952511680610b1e575060ff8583015116975b8583019860ff16895216998a8d526002602052848d209b169a8b8d5260205288848d2090610ac291610e35565b610acc9291610e49565b5116945191519251935160ff1694815196875260208701528501526060840152608083015260a082015260c07fdf56f3fc2f35311df4ba7ba0d1d8aa2e2b3b95ae773c025b79edcb4e66de2c8d91a380f35b97610a95565b60ff905197610a7d565b95610a62565b98610a3e565b85517f83ecdf2f000000000000000000000000000000000000000000000000000000008152fd5b8285517f3f8aac1e000000000000000000000000000000000000000000000000000000008152fd5b8980fd5b8780fd5b6004359073ffffffffffffffffffffffffffffffffffffffff82168203610bb457565b600080fd5b6024359073ffffffffffffffffffffffffffffffffffffffff82168203610bb457565b610100810190811067ffffffffffffffff821117610bf957604052565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6080810190811067ffffffffffffffff821117610bf957604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff821117610bf957604052565b7ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc6060910112610bb45773ffffffffffffffffffffffffffffffffffffffff906004358281168103610bb457916024359081168103610bb4579060443590565b60405190610cf282610bdc565b8160e06000918281528260208201528260408201528260608201528260808201528260a08201528260c08201520152565b90604051610d3081610bdc565b60e0600482946fffffffffffffffffffffffffffffffff815460ff81161515865260ff8160081c161515602087015260ff8160101c16604087015260181c16606085015260018101546080850152600281015460a0850152600381015460c08501520154910152565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610dc65760010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b90600a811015610e065760051b0190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b90600a811015610e06576005020190600090565b9190610ef657805182546020830151604084015160608501517fffffffffffffffffffffffffff0000000000000000000000000000000000000090931660ff941515949094169390931790151560081b61ff00161760109290921b62ff0000169190911760189190911b72ffffffffffffffffffffffffffffffff000000161782556080810151600183015560a0810151600283015560c0810151600383015560e0015160049190910155565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b90610ef65760048160008093558260018201558260028201558260038201550155565b9091610f55818484611310565b9160608301906fffffffffffffffffffffffffffffffff938483511615611081576020810151156110575785610f8a91611173565b1561102d5761102b9461031a9461100a935116907f80241e45435d412da83fc0d2a7e8bc8935d3fee74ec0ff4d6c0ce212a61a98d873ffffffffffffffffffffffffffffffffffffffff8094169384921694859360405191829189839092916fffffffffffffffffffffffffffffffff6020916040840195845216910152565b0390a360005260026020526040600020906000526020526040600020610e35565b565b60046040517fdef9ee19000000000000000000000000000000000000000000000000000000008152fd5b60046040517f4d99223b000000000000000000000000000000000000000000000000000000008152fd5b505050505050565b61109257600190565b600290565b8181116110ad57106110a857600190565b600090565b5050600290565b91906fffffffffffffffffffffffffffffffff606084015116158015611145575b61113c576110e2906114ae565b825190929015611124576110fa608082015184611097565b908115918215611119575b508161110f575090565b6020915001511590565b600114915038611105565b611132608082015184611152565b908161110f575090565b50600091508190565b50602083015115156110d5565b9061115c91611097565b6002811490811561116b575090565b600191501490565b9060208201511561121557611187906114ae565b8151909190156112055760e060c0820151910151905b80151590816111f4575b506111ed5780151591826111c6575b50506111c157600090565b600190565b6111d09250611097565b80159081156111e2575b5038806111b6565b6001915014386111da565b5050600190565b6111ff915083611152565b386111a7565b60c060e08201519101519061119d565b5050600090565b606460ff604084015116116112e6578151156112d05761125960c083015191608060e0850151945b018051909190156112c0575051925b83611097565b80159081156112b5575b5061127a5780151591826112a4575b505061127a57565b60046040517faceff445000000000000000000000000000000000000000000000000000000008152fd5b6112ae9250611152565b3880611272565b600191501438611263565b6112ca91506114ae565b92611253565b61125960e083015191608060c085015194611244565b60046040517f703d3f7e000000000000000000000000000000000000000000000000000000008152fd5b916113599161135f93611321610ce5565b5073ffffffffffffffffffffffffffffffffffffffff8091166000526002602052604060002091166000526020526040600020610e35565b50610d23565b90565b6fffffffffffffffffffffffffffffffff809116908114610dc65760010190565b9160009173ffffffffffffffffffffffffffffffffffffffff80941680845260209360028552604095868220931692838252855285812092815b600a81106113ee57600488517fef5446d9000000000000000000000000000000000000000000000000000000008152fd5b6113f88186610e35565b506fffffffffffffffffffffffffffffffff80915460181c1615611425575061142090610d99565b6113bd565b91926108aa959361135f9886849b94978452600190818352858520848652835286611454818888205416611362565b1660608c0152845281528383209183525220907fffffffffffffffffffffffffffffffff00000000000000000000000000000000825491611496818416611362565b169116179055610e35565b51908115158203610bb457565b60409081517fad4d4e2900000000000000000000000000000000000000000000000000000000815261022090818160048173ffffffffffffffffffffffffffffffffffffffff8097165afa9182156117fd57600092611606575b50506004916101606080920151168351928380927f52bfe7890000000000000000000000000000000000000000000000000000000082525afa9081156115fb57908291600091611593575b5001519060008212611563575090565b6024925051907fb02ef0870000000000000000000000000000000000000000000000000000000082526004820152fd5b91506080823d82116115f3575b816115ad60809383610c44565b810103126115f0575081906115e560608351926115c984610c28565b80518452602081015160208501528481015185850152016114a1565b606082015238611553565b80fd5b3d91506115a0565b82513d6000823e3d90fd5b909182823d84116117f6575b61161c8183610c44565b8101039182126115f0578451926101a0918285019367ffffffffffffffff94868110868211176117c957885282518652602083015160208701528783015188870152606083015160608701526080830151608087015260a083015160a087015261168860c084016114a1565b60c087015260e083015160e08701526101008084015190870152610120808401519087015260807ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffec08201126102255787516116e281610c28565b610140908185015181526101609182860151602083015261018096878701518c84015286015160608301528801526101c0840151908882168203610774578701527ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe200187136115f0578651938488019081118582101761179c5787526101e08201519086821682036115f05750926101609261178a61020060809794600499978552016114a1565b60208301528201529250819350611508565b6024827f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b6024837f4e487b710000000000000000000000000000000000000000000000000000000081526041600452fd5b503d611612565b84513d6000823e3d90fdfea2646970667358221220c2f51b848f6b3ad21b58ec18c660a039ac01e6160dbaf2805772cc549dac2d3364736f6c63430008130033";

type KeeperManagerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: KeeperManagerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class KeeperManager__factory extends ContractFactory {
  constructor(...args: KeeperManagerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    invoker_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<KeeperManager> {
    return super.deploy(invoker_, overrides || {}) as Promise<KeeperManager>;
  }
  override getDeployTransaction(
    invoker_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(invoker_, overrides || {});
  }
  override attach(address: string): KeeperManager {
    return super.attach(address) as KeeperManager;
  }
  override connect(signer: Signer): KeeperManager__factory {
    return super.connect(signer) as KeeperManager__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): KeeperManagerInterface {
    return new utils.Interface(_abi) as KeeperManagerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): KeeperManager {
    return new Contract(address, _abi, signerOrProvider) as KeeperManager;
  }
}
