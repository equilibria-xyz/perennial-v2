/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type {
  MultiInvoker,
  MultiInvokerInterface,
} from "../../contracts/MultiInvoker";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "keeper_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "MultiInvoker_Invoke_BadSender",
    type: "error",
  },
  {
    inputs: [],
    name: "MultiInvoker_PlaceOrder_OrderMustBeSingleSided",
    type: "error",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "enum IMultiInvoker.PerennialAction",
            name: "action",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "args",
            type: "bytes",
          },
        ],
        internalType: "struct IMultiInvoker.Invocation[]",
        name: "invocations",
        type: "tuple[]",
      },
    ],
    name: "invoke",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a03461008157601f610c3138819003918201601f19168301916001600160401b038311848410176100865780849260209460405283398101031261008157516001600160a01b0381169081900361008157608052604051610b94908161009d823960805181818161036b0152818161075c0152818161085b01526108f00152f35b600080fd5b634e487b7160e01b600052604160045260246000fdfe6080604052600436101561001257600080fd5b60003560e01c63bdec4a271461002757600080fd5b346104db5760207ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc3601126104db5767ffffffffffffffff600435116104db573660236004350112156104db5767ffffffffffffffff60043560040135116104db573660246004356004013560051b6004350101116104db5760005b6004356004013581106100b257005b60248160051b6004350101357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff9d6004353603018112156104db576004350160407fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffdc82360301126104db57604051906040820182811067ffffffffffffffff821117610670576040526012906024810135828110156104db57835260448101359067ffffffffffffffff82116104db570191366043840112156104db57602483013567ffffffffffffffff811161067057604051936101b860207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f85011601866109b9565b81855236604483830101116104db578160009260446020930183880137850101526020810192835280518281101561097657600e036106e757505051805181016101e082602083019203126104db5761022e610216602084016109fa565b916101406102278260408701610a28565b9401610ad2565b604051907f55f5751000000000000000000000000000000000000000000000000000000000825233600483015260c08260248173ffffffffffffffffffffffffffffffffffffffff87165afa9182156104cf576000926106a7575b506040517f5b4b969500000000000000000000000000000000000000000000000000000000815233600482015260808160248173ffffffffffffffffffffffffffffffffffffffff88165afa9081156104cf57600091610607575b5060609260016102fb858301518686015190610b41565b14158060016103136080850151608088015190610b41565b1415816105ff575b506105d557156105935783808401519101518103908111610491575b60a0860152600161034b6080870151610b33565b146104e0575b50505073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690813b156104db5761014473ffffffffffffffffffffffffffffffffffffffff916000809461045360405197889687957fadd53396000000000000000000000000000000000000000000000000000000008752336004880152166024860152604485019060e0809180511515845260208101511515602085015260ff60408201511660408501526fffffffffffffffffffffffffffffffff60608201511660608501526080810151608085015260a081015160a085015260c081015160c08501520151910152565b5af180156104cf576104c0575b505b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8114610491576001016100a3565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6104c9906109a5565b38610460565b6040513d6000823e3d90fd5b600080fd5b602060806040840151948401519301519101519173ffffffffffffffffffffffffffffffffffffffff85163b156104db57604051937f2d7516ea000000000000000000000000000000000000000000000000000000008552336004860152602485015260448401526064830152608482015260008160a4818373ffffffffffffffffffffffffffffffffffffffff87165af180156104cf57610584575b8080610351565b61058d906109a5565b3861057d565b608080840151910151810390811115610337577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60046040517f86e77fd9000000000000000000000000000000000000000000000000000000008152fd5b90503861031b565b90506080813d60801161069f575b81610622608093836109b9565b810103126104db57604051906080820182811067ffffffffffffffff8211176106705760405280518252602081015160208301526040810151604083015260608091015190820152386102e4565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b3d9150610615565b90915060c0903d60c0116106df575b6106c082826109b9565b60c08183810103126104db576106d891810190610ad2565b9038610289565b3d91506106b6565b80518281101561097657601103610701575b505050610462565b80518281101561097657600f036108a157505051805181019061014080828403126104db5761074160206107368185016109fa565b940160408401610a28565b9101519073ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000163b156104db5761083c9173ffffffffffffffffffffffffffffffffffffffff604051947f1a8d1f140000000000000000000000000000000000000000000000000000000086523360048701521660248501526044840152606483019060e0809180511515845260208101511515602085015260ff60408201511660408501526fffffffffffffffffffffffffffffffff60608201511660608501526080810151608085015260a081015160a085015260c081015160c08501520151910152565b600081610164818373ffffffffffffffffffffffffffffffffffffffff7f0000000000000000000000000000000000000000000000000000000000000000165af180156104cf57610892575b505b3880806106f9565b61089b906109a5565b38610888565b5190811015610976576010146108b8575b5061088a565b516040818051810103126104db5760406108d4602083016109fa565b9101519073ffffffffffffffffffffffffffffffffffffffff807f000000000000000000000000000000000000000000000000000000000000000016803b156104db576000928360649260405196879586947ff4492f5900000000000000000000000000000000000000000000000000000000865233600487015216602485015260448401525af180156104cf57156108b257610970906109a5565b386108b2565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b67ffffffffffffffff811161067057604052565b90601f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0910116810190811067ffffffffffffffff82111761067057604052565b519073ffffffffffffffffffffffffffffffffffffffff821682036104db57565b519081151582036104db57565b80929161010091829103126104db5760405190810181811067ffffffffffffffff821117610670576040528092610a5e81610a1b565b8252610a6c60208201610a1b565b6020830152604081015160ff811681036104db57604083015260608101516fffffffffffffffffffffffffffffffff811681036104db5760e091829160608501526080810151608085015260a081015160a085015260c081015160c08501520151910152565b91908260c09103126104db5760405160c0810181811067ffffffffffffffff8211176106705760405260a080829480518452602081015160208501526040810151604085015260608101516060850152608081015160808501520151910152565b610b3c57600190565b600290565b818111610b575710610b5257600190565b600090565b505060029056fea264697066735822122031770c031918fad83dc1903007777e790365a465584092f47a9ed138a4b4341364736f6c63430008130033";

type MultiInvokerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: MultiInvokerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class MultiInvoker__factory extends ContractFactory {
  constructor(...args: MultiInvokerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    keeper_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<MultiInvoker> {
    return super.deploy(keeper_, overrides || {}) as Promise<MultiInvoker>;
  }
  override getDeployTransaction(
    keeper_: PromiseOrValue<string>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(keeper_, overrides || {});
  }
  override attach(address: string): MultiInvoker {
    return super.attach(address) as MultiInvoker;
  }
  override connect(signer: Signer): MultiInvoker__factory {
    return super.connect(signer) as MultiInvoker__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): MultiInvokerInterface {
    return new utils.Interface(_abi) as MultiInvokerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MultiInvoker {
    return new Contract(address, _abi, signerOrProvider) as MultiInvoker;
  }
}
