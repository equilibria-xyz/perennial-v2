/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type {
  IMarket,
  IMarketInterface,
} from "../../../../../@equilibria/perennial-v2/contracts/interfaces/IMarket";

const _abi = [
  {
    inputs: [],
    name: "MarketClosedError",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketCollateralUnderLimitError",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketExceedsPendingIdLimitError",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketInDebtError",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketInLiquidationError",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketInsufficientCollateralError",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketInsufficientLiquidityError",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketInvalidOracle",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketMakerOverLimitError",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketNotSingleSidedError",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketNotTreasuryError",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketOperatorNotAllowed",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketOracleBootstrappingError",
    type: "error",
  },
  {
    inputs: [],
    name: "MarketPausedError",
    type: "error",
  },
  {
    inputs: [],
    name: "PayoffProviderInvalidOracle",
    type: "error",
  },
  {
    inputs: [],
    name: "PayoffProviderInvalidPayoffDefinitionError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "UOwnableNotOwnerError",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "UOwnableNotPendingOwnerError",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "preVersion",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toVersion",
        type: "uint256",
      },
    ],
    name: "AccountSettle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "Fixed6",
        name: "amount",
        type: "int256",
      },
      {
        indexed: false,
        internalType: "UFixed6",
        name: "newShortfall",
        type: "uint256",
      },
    ],
    name: "CollateralSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "treasury",
        type: "address",
      },
      {
        indexed: false,
        internalType: "UFixed6",
        name: "feeAmount",
        type: "uint256",
      },
    ],
    name: "FeeClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "UFixed6",
        name: "protocolFeeAmount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "UFixed6",
        name: "marketFeeAmount",
        type: "uint256",
      },
    ],
    name: "FeeSettled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "liquidator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "UFixed6",
        name: "liquidationReward",
        type: "uint256",
      },
    ],
    name: "Liquidation",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        components: [
          {
            internalType: "UFixed6",
            name: "maintenance",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "fundingFee",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "takerFee",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "makerFee",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "positionFee",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "makerLimit",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
          {
            internalType: "UFixed6",
            name: "makerRewardRate",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "longRewardRate",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "shortRewardRate",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "UFixed6",
                name: "minRate",
                type: "uint256",
              },
              {
                internalType: "UFixed6",
                name: "maxRate",
                type: "uint256",
              },
              {
                internalType: "UFixed6",
                name: "targetRate",
                type: "uint256",
              },
              {
                internalType: "UFixed6",
                name: "targetUtilization",
                type: "uint256",
              },
            ],
            internalType: "struct UJumpRateUtilizationCurve6",
            name: "utilizationCurve",
            type: "tuple",
          },
          {
            internalType: "contract IOracleProvider",
            name: "oracle",
            type: "address",
          },
          {
            components: [
              {
                internalType: "contract IPayoffProvider",
                name: "provider",
                type: "address",
              },
              {
                internalType: "bool",
                name: "short",
                type: "bool",
              },
            ],
            internalType: "struct Payoff",
            name: "payoff",
            type: "tuple",
          },
        ],
        indexed: false,
        internalType: "struct MarketParameter",
        name: "newParameter",
        type: "tuple",
      },
    ],
    name: "ParameterUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "newPendingOwner",
        type: "address",
      },
    ],
    name: "PendingOwnerUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "UFixed6",
        name: "rewardAmount",
        type: "uint256",
      },
    ],
    name: "RewardClaimed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "preVersion",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "toVersion",
        type: "uint256",
      },
    ],
    name: "Settle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "TreasuryUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "version",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "UFixed6",
        name: "newMaker",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "UFixed6",
        name: "newLong",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "UFixed6",
        name: "newShort",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "Fixed6",
        name: "newCollateral",
        type: "int256",
      },
    ],
    name: "Updated",
    type: "event",
  },
  {
    inputs: [],
    name: "acceptOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "global",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "currentId",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "protocolFee",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "marketFee",
            type: "uint256",
          },
        ],
        internalType: "struct Global",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "symbol",
            type: "string",
          },
          {
            internalType: "Token18",
            name: "token",
            type: "address",
          },
          {
            internalType: "Token18",
            name: "reward",
            type: "address",
          },
        ],
        internalType: "struct IMarket.MarketDefinition",
        name: "definition_",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "UFixed6",
            name: "maintenance",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "fundingFee",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "takerFee",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "makerFee",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "positionFee",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "makerLimit",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
          {
            internalType: "UFixed6",
            name: "makerRewardRate",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "longRewardRate",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "shortRewardRate",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "UFixed6",
                name: "minRate",
                type: "uint256",
              },
              {
                internalType: "UFixed6",
                name: "maxRate",
                type: "uint256",
              },
              {
                internalType: "UFixed6",
                name: "targetRate",
                type: "uint256",
              },
              {
                internalType: "UFixed6",
                name: "targetUtilization",
                type: "uint256",
              },
            ],
            internalType: "struct UJumpRateUtilizationCurve6",
            name: "utilizationCurve",
            type: "tuple",
          },
          {
            internalType: "contract IOracleProvider",
            name: "oracle",
            type: "address",
          },
          {
            components: [
              {
                internalType: "contract IPayoffProvider",
                name: "provider",
                type: "address",
              },
              {
                internalType: "bool",
                name: "short",
                type: "bool",
              },
            ],
            internalType: "struct Payoff",
            name: "payoff",
            type: "tuple",
          },
        ],
        internalType: "struct MarketParameter",
        name: "parameter_",
        type: "tuple",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "locals",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "currentId",
            type: "uint256",
          },
          {
            internalType: "Fixed6",
            name: "collateral",
            type: "int256",
          },
          {
            internalType: "UFixed6",
            name: "reward",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "liquidation",
            type: "uint256",
          },
        ],
        internalType: "struct Local",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "parameter",
    outputs: [
      {
        components: [
          {
            internalType: "UFixed6",
            name: "maintenance",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "fundingFee",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "takerFee",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "makerFee",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "positionFee",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "makerLimit",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
          {
            internalType: "UFixed6",
            name: "makerRewardRate",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "longRewardRate",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "shortRewardRate",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "UFixed6",
                name: "minRate",
                type: "uint256",
              },
              {
                internalType: "UFixed6",
                name: "maxRate",
                type: "uint256",
              },
              {
                internalType: "UFixed6",
                name: "targetRate",
                type: "uint256",
              },
              {
                internalType: "UFixed6",
                name: "targetUtilization",
                type: "uint256",
              },
            ],
            internalType: "struct UJumpRateUtilizationCurve6",
            name: "utilizationCurve",
            type: "tuple",
          },
          {
            internalType: "contract IOracleProvider",
            name: "oracle",
            type: "address",
          },
          {
            components: [
              {
                internalType: "contract IPayoffProvider",
                name: "provider",
                type: "address",
              },
              {
                internalType: "bool",
                name: "short",
                type: "bool",
              },
            ],
            internalType: "struct Payoff",
            name: "payoff",
            type: "tuple",
          },
        ],
        internalType: "struct MarketParameter",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pendingOwner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "pendingPosition",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "version",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "long",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "short",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "fee",
            type: "uint256",
          },
        ],
        internalType: "struct Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "id",
        type: "uint256",
      },
    ],
    name: "pendingPositions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "version",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "long",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "short",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "fee",
            type: "uint256",
          },
        ],
        internalType: "struct Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "position",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "version",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "long",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "short",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "fee",
            type: "uint256",
          },
        ],
        internalType: "struct Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "positions",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "id",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "version",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "maker",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "long",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "short",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "fee",
            type: "uint256",
          },
        ],
        internalType: "struct Position",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "reward",
    outputs: [
      {
        internalType: "Token18",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "settle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "token",
    outputs: [
      {
        internalType: "Token18",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "treasury",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "UFixed6",
        name: "newMaker",
        type: "uint256",
      },
      {
        internalType: "UFixed6",
        name: "newLong",
        type: "uint256",
      },
      {
        internalType: "UFixed6",
        name: "newShort",
        type: "uint256",
      },
      {
        internalType: "Fixed6",
        name: "newCollateral",
        type: "int256",
      },
    ],
    name: "update",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "UFixed6",
            name: "maintenance",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "fundingFee",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "takerFee",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "makerFee",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "positionFee",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "makerLimit",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "closed",
            type: "bool",
          },
          {
            internalType: "UFixed6",
            name: "makerRewardRate",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "longRewardRate",
            type: "uint256",
          },
          {
            internalType: "UFixed6",
            name: "shortRewardRate",
            type: "uint256",
          },
          {
            components: [
              {
                internalType: "UFixed6",
                name: "minRate",
                type: "uint256",
              },
              {
                internalType: "UFixed6",
                name: "maxRate",
                type: "uint256",
              },
              {
                internalType: "UFixed6",
                name: "targetRate",
                type: "uint256",
              },
              {
                internalType: "UFixed6",
                name: "targetUtilization",
                type: "uint256",
              },
            ],
            internalType: "struct UJumpRateUtilizationCurve6",
            name: "utilizationCurve",
            type: "tuple",
          },
          {
            internalType: "contract IOracleProvider",
            name: "oracle",
            type: "address",
          },
          {
            components: [
              {
                internalType: "contract IPayoffProvider",
                name: "provider",
                type: "address",
              },
              {
                internalType: "bool",
                name: "short",
                type: "bool",
              },
            ],
            internalType: "struct Payoff",
            name: "payoff",
            type: "tuple",
          },
        ],
        internalType: "struct MarketParameter",
        name: "newParameter",
        type: "tuple",
      },
    ],
    name: "updateParameter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newPendingOwner",
        type: "address",
      },
    ],
    name: "updatePendingOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newTreasury",
        type: "address",
      },
    ],
    name: "updateTreasury",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "oracleVersion",
        type: "uint256",
      },
    ],
    name: "versions",
    outputs: [
      {
        components: [
          {
            components: [
              {
                internalType: "Fixed6",
                name: "_value",
                type: "int256",
              },
            ],
            internalType: "struct Accumulator6",
            name: "makerValue",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "Fixed6",
                name: "_value",
                type: "int256",
              },
            ],
            internalType: "struct Accumulator6",
            name: "longValue",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "Fixed6",
                name: "_value",
                type: "int256",
              },
            ],
            internalType: "struct Accumulator6",
            name: "shortValue",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "UFixed6",
                name: "_value",
                type: "uint256",
              },
            ],
            internalType: "struct UAccumulator6",
            name: "makerReward",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "UFixed6",
                name: "_value",
                type: "uint256",
              },
            ],
            internalType: "struct UAccumulator6",
            name: "longReward",
            type: "tuple",
          },
          {
            components: [
              {
                internalType: "UFixed6",
                name: "_value",
                type: "uint256",
              },
            ],
            internalType: "struct UAccumulator6",
            name: "shortReward",
            type: "tuple",
          },
          {
            internalType: "bool",
            name: "valid",
            type: "bool",
          },
        ],
        internalType: "struct Version",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

export class IMarket__factory {
  static readonly abi = _abi;
  static createInterface(): IMarketInterface {
    return new utils.Interface(_abi) as IMarketInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IMarket {
    return new Contract(address, _abi, signerOrProvider) as IMarket;
  }
}
